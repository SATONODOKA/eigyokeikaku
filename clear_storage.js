const { chromium } = require('playwright');

(async () => {
  const browser = await chromium.launch({ 
    headless: false,
    slowMo: 300
  });
  const page = await browser.newPage();
  
  try {
    await page.goto('http://localhost:3000');
    await page.waitForTimeout(1000);
    
    console.log('üóëÔ∏è  IndexedDB„Å®localStorage„Çí„ÇØ„É™„Ç¢‰∏≠...\n');
    
    // IndexedDB„Å®localStorage„Çí„ÇØ„É™„Ç¢
    await page.evaluate(() => {
      // IndexedDB„Çí„ÇØ„É™„Ç¢
      indexedDB.deleteDatabase('eigyokeikaku-storage');
      
      // localStorage„Çí„ÇØ„É™„Ç¢
      localStorage.clear();
      
      return '„ÇØ„É™„Ç¢ÂÆå‰∫Ü';
    });
    
    console.log('‚úÖ „Çπ„Éà„É¨„Éº„Ç∏„Çí„ÇØ„É™„Ç¢„Åó„Åæ„Åó„Åü');
    console.log('üîÑ „Éö„Éº„Ç∏„Çí„É™„É≠„Éº„Éâ„Åó„Åæ„Åô...\n');
    
    await page.reload();
    await page.waitForTimeout(2000);
    
    // ‚ë¢ÈáçÁÇπÈ°ßÂÆ¢„Çø„Éñ„ÇíÁ¢∫Ë™ç
    await page.locator('button').filter({ hasText: '‚ë¢ÈáçÁÇπÈ°ßÂÆ¢' }).click();
    await page.waitForTimeout(1500);
    
    const emptyMessage = await page.locator('text=„Åæ„Å†ÈáçÁÇπÈ°ßÂÆ¢„ÅåÁôªÈå≤„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì').isVisible();
    console.log(`üìã Á©∫„É°„ÉÉ„Çª„Éº„Ç∏Ë°®Á§∫: ${emptyMessage ? '‚úÖ ÊàêÂäüÔºÅ' : '‚ùå „Åæ„Å†ÊÆã„Å£„Å¶„ÅÑ„Çã'}\n`);
    
    await page.screenshot({ path: 'after_clear.png', fullPage: true });
    console.log('üì∏ „Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà: after_clear.png\n');
    
    console.log('‚úÖ „Éá„Éº„Çø„É™„Çª„ÉÉ„ÉàÂÆå‰∫ÜÔºÅ');
    console.log('\nEnter„Ç≠„Éº„ÅßÁµÇ‰∫Ü...');
    await new Promise(resolve => process.stdin.once('data', resolve));
    
  } catch (error) {
    console.error('\n‚ùå „Ç®„É©„Éº:', error.message);
  } finally {
    await browser.close();
  }
})();

