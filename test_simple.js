const { chromium } = require('playwright');
const path = require('path');

(async () => {
  const browser = await chromium.launch({ 
    headless: false,
    slowMo: 1000
  });
  const page = await browser.newPage();
  
  // „Ç¢„É©„Éº„Éà„Çí„Ç≠„É£„Éó„ÉÅ„É£
  page.on('dialog', async dialog => {
    console.log(`üì¢ „Ç¢„É©„Éº„Éà: ${dialog.message()}`);
    await dialog.accept();
  });
  
  try {
    await page.goto('http://localhost:3000');
    await page.waitForTimeout(2000);
    console.log('‚úÖ „Éõ„Éº„É†ÁîªÈù¢„ÇíÈñã„Åç„Åæ„Åó„Åü');

    const filePath = path.join(__dirname, 'Ê•≠Á∏æË®àÁîªÁî®„É¨„Éù„Éº„Éà_Ë©≥Á¥∞Áâà.xlsx');
    console.log(`üìÅ „Éï„Ç°„Ç§„É´: ${filePath}`);
    
    // Á∑ë„ÅÆ„Éú„Çø„É≥ÔºàÊúüÂàù„Éá„Éº„ÇøÔºâ„Çí„ÇØ„É™„ÉÉ„ÇØ
    console.log('\nüîÑ ÊúüÂàù„Éá„Éº„Çø„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ...');
    const [fileChooser] = await Promise.all([
      page.waitForEvent('filechooser'),
      page.locator('button').filter({ hasText: 'ÊúüÂàù„Éá„Éº„Çø„ÇíË™≠„ÅøËæº„ÇÄ' }).click()
    ]);
    
    await fileChooser.setFiles(filePath);
    console.log('‚úÖ „Éï„Ç°„Ç§„É´„ÇíÈÅ∏Êäû');
    await page.waitForTimeout(2000);
    
    // ÂÆüË°å„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ
    console.log('\nüîÑ ÂÆüË°å„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ...');
    await page.locator('button').filter({ hasText: 'ÂÆüË°å' }).click();
    await page.waitForTimeout(4000);
    
    // ‚ë£„Çø„Éñ„Å´ÁßªÂãïÔºàËá™ÂãïÈÅ∑Áßª„Åó„Å™„Åã„Å£„ÅüÂ†¥ÂêàÔºâ
    try {
      await page.locator('button').filter({ hasText: '‚ë£ÈáçÁÇπÂ§ñÈ°ßÂÆ¢' }).click();
      await page.waitForTimeout(2000);
    } catch (e) {
      // „Åô„Åß„Å´ÁßªÂãï„Åó„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÅØ„Ç®„É©„Éº„ÇíÁÑ°Ë¶ñ
    }
    
    // „Éá„Éº„ÇøÁ¢∫Ë™ç
    const rows = await page.locator('tbody tr').count();
    console.log(`\nüìä „ÉÜ„Éº„Éñ„É´„ÅÆË°åÊï∞: ${rows}`);
    
    if (rows > 0) {
      console.log('‚úÖ „Éá„Éº„Çø„ÅåË™≠„ÅøËæº„Åæ„Çå„Åæ„Åó„ÅüÔºÅ');
    } else {
      console.log('‚ùå „Éá„Éº„Çø„ÅåË™≠„ÅøËæº„Åæ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì');
    }
    
    await page.screenshot({ path: 'test_simple.png', fullPage: true });
    console.log('üì∏ „Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà‰øùÂ≠ò');
    
    console.log('\nEnter„Ç≠„Éº„ÅßÁµÇ‰∫Ü...');
    await new Promise(resolve => process.stdin.once('data', resolve));
    
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error.message);
  } finally {
    await browser.close();
  }
})();

